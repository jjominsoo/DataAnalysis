데이터 기반 제품 개선
머신러닝 > 사용자들의 패턴을 바탕으로 미래를 예측(개인화 / 알고리즘 / 문제예측)

데이터과학자
데이터 모델링
통계지식 : 있으면 좋다는 느낌 / 열정 끈기 (박사학위) / 코딩능력 / 다양한 경험 / 현실적인 접근방법(Agile) / 과학적인 접근방법(가설 수립)
+모델 .. Agile 방법론으로 짧게 여러번 한다
= 목적에 맞는 합당한 가설(머신러닝 필요한) > 훈련 데이터 수집(신뢰가능한 데이터) > 모델 빌딩, 테스트 > 배포 > AB테스트 > 결과분석 > 1. 전체 launch
								  				          		  2. 가설 재 수립
머신러닝 모델링
개인화된 추천 .. 규칙기반 보단 머신러닝을 사용자의 패턴을 찾아 추천
만약 훈련데이터가 신뢰할 수 없는 데이터라면 .. 편향성/윤리 문제가 생길수도 있다 .. 사기결제
하지만 굳이 100% 정확할 필요는 없다 = 50%이상만 돼도 괜찮다 .. 환자예측
업무를 자동화할 수 있다 .. 트랙터
물론 사람보다 정확한 결과를 내리지만, 잘못된 결과에 대한 책임? >> 그냥 보조역할로 수행 인간의 일을 도와준다

머신러닝
데이터의 예(패턴)를 줌으로써 모델이 알아서 분류를 하도록하는 것 == '예제'를 기준으로 '배움'이 가능한 기계 
.. 예제를 직접 입력해줌=정답 : 지도학숩(supervised learning) // 알아서 적당히 분류해줌 : 비지도학습(unsupervised learning)
+ 강화학습
인공지능 ) 머신러닝 (포함관계)

머신러닝 		: 데이터로 부터 학습(훈련)하는 알고리즘 .. 수치의 변화를 통해서 예측을 한다
머신러닝 모델 	: 학습 결과로 만들어진 블랙박스 >> 예측의 기준 but 동작의 원인은 모름(why 설명이 안됨 .. ML explainability)
+머신러닝 모델(데이터 과학자) > 배포(API) .. ML Ops팀이 전담하게 됨

종류
1. 지도 기계학습
명시적 예제를 통해 학습 (정답)
1.1 분류지도학습(Classification) = 이진분류(Binary), 다중분류(Multi-class) .. 명확한 답을 줌( 개, 고양이, 거북이 .. )
1.2 회귀지도학습(Regression) .. 연속적인 숫자로 나올때(방향성 예측)
>>  레이블/타겟 : 모델이 예측해야하는 필드
* 타이타닉 승객 생존 : 레이블/타겟필드 = 생존 여부
+ Feature Engineering : 주어진 필드로부터 목적에 맞게 사용하기 쉬운 새로운 필드를 뽑아내는 것 

2. 비지도 기계학습
데이터를 특정 기준으로 그룹핑함 + 클러스터링
* GPT
* Language Model : 어떤 단어(문장)를 봤을 때 학습된 데이터를 바탕으로, 그 뒤에 오는 가장 확률이 높은 단어(문장)을 예측하는 것

* 반지도 기계학습(Semisupervised)
정답을 다 주지않고 부분만 주되 그 뒤에 클러스터링을 통해서 정답을 찾아냄

3. 강화학습(Reinforcement Learning)
게임같이 여러번 해보면서 룰을 익히고 목적을 달성하기 위해 행동한다

모델 개발시 고려할점
데이터 과학자는 데이터 모델 개발하고 끝이 아니라, 개발부터 배포까지 책임을 쳐야한다.
프레임워크 표준화가 중요 ( 데이터 과학자-R , 데이터 엔지니어-파이썬 .. X) .. AWS SageMaker
운영에서 생기는 인사이트를 갖고 개선점을 찾는 피드백이 필요하다


ML Ops
CTR(Click Through Rate)를 통해 모델의 성능을 파악하려해도 시간이 지남에 따라 많은 데이터들이 유입되고 변화하면서 유의미한 결과를 내놓지 못한다.. > 모델을 주기적으로 재훈련해줘야한다
+Data drift : 훈련 데이터와 실제 데이터들이 시간의 흐름에 따라 달리 변화함

DevOps	: 다른 개발자들이 만든 코드를 가지고 테스트를 거쳐 배포할 수 있는 패키지로 만들어 배포한다. 이후 모니터링(logging)과 이슈 발생시 escalation 프로세스를 수행하고(troubleshooting, rollback) 문제재발방지까지 하는, 서비스부터 운영까지의 역할을 한다.
+on-call 프로세스 : 5분대기조
+CI(Continuous Integration) 중간에 코드를 바꾸면 바로 모든 테스트 돌리고 배포하기 쉬운형태로 만듬
+CD(Continuous Delivery) 결과로 나온 패키지를 서버에 배포하는 것

MLOps	: 위와 동일하되 코드가 아닌 데이터과학자들이 만든 데이터 모델을 기본으로 함
+모니터링( Latency(서비스속도), Data drift(현재와 훈련데이터의 분포차이) )
+CT(Continuous Training) CI CD와 마찬가지로 Data Drift가 생겨 훈련의 갱신이 필요한 경우 훈련하고 테스트를 통해 배포까지 자동화하는 것

머신러닝 사용시 고려할점
현재 법률이 시대의 발전에 따라가지 못한다.. 데이터 윤리, 권리
AI는 훈련 데이터에 따라 성능이 좌지우지된다. >> 절대적으로 신뢰하면 안되다 .. 데이터 편향, 데이터의 이유 확인







