

큰 데이터베이스(실제 서비스)를 관리할 때는 쿼리 퍼포먼스가 중요해지는데 기본적인 원칙을 지키지 않으면 부작용
ex) 쿼리가 DB에 과부하를 줘서 다른 쿼리가 못씀 / 사용한 만큼 돈을 쓰는 서비스(bigquery) > 요금 증가
유즈케이스 마다 효율적인 쿼리는 다르다

기본원칙
1. 테이블 == 집합
필터링(집합크기 줄임) >>  join
with절(테이블 분리)에서 최대한 필터링을 진행한 후에 join 진행

2. * % 사용하지 않기
다량의 데이터를 확인하기 위해선 나눠서 확인해야한다.
*처음 테이블에 접근할 때는 > limit 10
*파티션 테이블 확인 및 조회 > where date = '20231104')
*칼럼수 많은 테이블 조회 > select 칼럼1, 칼럼2
*like 사용시 % _ 기호 사용 시 세분화하기 > like 'd%' 

3. 데이터 타입 확인 
* 묵시적 형변환은 지원함 (DB가 알아서 데이터 타입을 맞춰줌) 하지만 비효율적임 >> date > '20231031'
* where 칼럼에는 함수사용 안하기 = index를 사용할 수 없어서 + 함수를 실행하는 시간만큼 쿼리가 무거워져서 == 읽기 속도가 느려짐 >> where data > DATE_FORMAT('2023-10-31',%Y%m%d)

4. JOIN 유의점
*테이블 간의 관계 고려 ( 1:1 1:n n:m )
**1:1 > 더 행수가 작은 테이블 기준으로 결과가 나옴(innerjoin) >> 사람 : 사원정보
**1:n > 1을 기준으로 두면 행수가 늘어나고, n을 기준으로 두면 그대로다(leftjoin) >> 고객 : 구매 / 클릭
**n:n > 위와 마찬가지					>> 대학생 : 동아리
>> 원하는 데이터를 얻기 위해서는 해당 테이블의 관계를 파악해서 어떤 테이블에서 어떤 데이터를 얻을지를 확인해야함
+ER모델 : Table 을 엔티티로 두고 table관계를 relationship으로 표현함 
*중복확인
**큰 테이블 결합 쿼리속도 느려짐, 의도한 것과 다른 결과를 얻을 수 있음 >> 로그같은 경우 텀을 두고 같은 작업을 반복하면 두개의 다른 작업으로 인식 (
*쿼리방식
상황에 따라 다른 쿼리를 작성해보자 .. 필터링

5. 쿼리 가독성 높이기
*자신과 다른 사람들을 위해 이해를 돕기위해 가독성을 높여야한다.
** 서브 쿼리보단 with, with사용시 블록이름 지정, 주석

정리
테이블을 집합으로 생각하고
필터링을 최대한 먼저하기
* % 보단 칼럼이름 지정
like연산자도 규칙세분화 하기
데이터 타입 확인하기
join시 테이블 관계, 중복확인
가독성 높이기