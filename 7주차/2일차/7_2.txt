반올림
오사오입 : 가까운 짝수(0 2 4 6 8) 쪽으로 반올림한다. >> 왜? 오차를 최대한 줄이기 위해서
==  round(1.5) = 2 // round(2.5) = 2 // round(7.5) = 8 // round(8.5) = 8
ex) 0.5 + 1.5 + 2.5+ 3.5 = 8.5
원래 반올림
1+2+3+4 = 10 >> 1.5 오차
오사오입 반올림
0+2+2+4 = 8 >> 0.5 오차

++ 반올림을 사용해야할 경우
기본적으로 상황과 목적에 따라 적절한 방식을 이용해야 한다
1. 소수점 자리 조절 	(2째 자리)
2. 데이터 정확도 계산 	(정확할 필요가 없는 경우)
3. 통계분석 		(데이터 크기 줄이고 간소화)
4. 시각화			(레이아웃 개선 및 가독성 증가) 




데이터프레임 / 시리즈 차이

squeeze() -> 데이터프레임을 시리즈타입으로 갖고온다

정렬
대문자-소문자 순서
kind = 'quicksort' = 보통 quicksort가 빠름 특수한 상황이라면 mergesort / heapsort로 대체 가능
na_position = 'last' = na 데이터 마지막에 보여줌 ( df_series.info() 를 통해 na데이터가 있는지 없는지 확인 먼저 ) 가능
ignore_index = True = 인덱스 초기화

파괴적/비파괴적을 위해 보통
카피하고 데이터수정함

시리즈는 lamda를 썼을 때 튜플이 아닌 시리즈 단위로 들어오기 때문에 lambda조건을 걸때 명시해줘야한다
ex) 1	bcd (시리즈)
lambda x : len(x) 		X
lambda x : x.str.len() 	O


결측치확인
count는 결측(None,nan)을 무시하고 통계를 낸다. 근데 우리는 결측자료도 통계에 포함시킬 필요도 있을 때도 있다.
시리즈.value_counts(dropna=False)
시리즈.info()


