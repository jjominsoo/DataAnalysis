{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1nH60dNLx6c8bzgh0nl5jbqft5GzLdvHg","timestamp":1707129160619}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# EDA, 탐색적 데이터 분석"],"metadata":{"id":"oorr1mBQ7Jen"}},{"cell_type":"code","source":["import numpy as np\n","\n","seed = 1234\n","np.random.seed(seed)"],"metadata":{"id":"L2-XxW0ZuHnQ","executionInfo":{"status":"ok","timestamp":1707129188596,"user_tz":-540,"elapsed":310,"user":{"displayName":"맙소사","userId":"12302316345852543158"}}},"execution_count":1,"outputs":[]},{"cell_type":"markdown","source":["## 데이터 로드"],"metadata":{"id":"SJzl5AxNTAjQ"}},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"YPZvpFrT7Dwv","executionInfo":{"status":"ok","timestamp":1707129192419,"user_tz":-540,"elapsed":1123,"user":{"displayName":"맙소사","userId":"12302316345852543158"}},"outputId":"c4344fc5-3c50-433a-8fc3-8a97f1f2b22d"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   CustomerID   Genre  Age  Annual Income (k$)  Spending Score (1-100)\n","0           1    Male   19                  15                      39\n","1           2    Male   21                  15                      81\n","2           3  Female   20                  16                       6\n","3           4  Female   23                  16                      77\n","4           5  Female   31                  17                      40"],"text/html":["\n","  <div id=\"df-9c61e5e3-8e71-4ffc-b6eb-af40d5ae4e4f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CustomerID</th>\n","      <th>Genre</th>\n","      <th>Age</th>\n","      <th>Annual Income (k$)</th>\n","      <th>Spending Score (1-100)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>Male</td>\n","      <td>19</td>\n","      <td>15</td>\n","      <td>39</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>Male</td>\n","      <td>21</td>\n","      <td>15</td>\n","      <td>81</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>Female</td>\n","      <td>20</td>\n","      <td>16</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>Female</td>\n","      <td>23</td>\n","      <td>16</td>\n","      <td>77</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>Female</td>\n","      <td>31</td>\n","      <td>17</td>\n","      <td>40</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9c61e5e3-8e71-4ffc-b6eb-af40d5ae4e4f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9c61e5e3-8e71-4ffc-b6eb-af40d5ae4e4f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9c61e5e3-8e71-4ffc-b6eb-af40d5ae4e4f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2cbdf087-81ae-45e5-8f51-6254ce430828\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2cbdf087-81ae-45e5-8f51-6254ce430828')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2cbdf087-81ae-45e5-8f51-6254ce430828 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":2}],"source":["import pandas as pd\n","\n","# 데이터 경로 지정 및 읽어오기\n","data_path = 'Mall_Customers.csv'\n","customers = pd.read_csv(data_path)\n","\n","# 데이터 꼴 확인\n","customers.head()"]},{"cell_type":"markdown","source":["## 기본 분석 및 기초 통계 분석"],"metadata":{"id":"32KFMtbfTC5v"}},{"cell_type":"code","source":["# 기본 정보\n","print('#'*20, '기본 정보', '#'*20)\n","customers.info() # info() 안에서 자동으로 print를 진행\n","\n","# 기초 통계량\n","summary_statistics = customers.describe(include='all')\n","print('#'*20, '기초 통계량', '#'*20)\n","print(summary_statistics)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZMLaJrpE-lwk","executionInfo":{"status":"ok","timestamp":1707129194513,"user_tz":-540,"elapsed":276,"user":{"displayName":"맙소사","userId":"12302316345852543158"}},"outputId":"a77f2d46-4c84-458a-d97e-5c1ed9400270"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["#################### 기본 정보 ####################\n","<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 200 entries, 0 to 199\n","Data columns (total 5 columns):\n"," #   Column                  Non-Null Count  Dtype \n","---  ------                  --------------  ----- \n"," 0   CustomerID              200 non-null    int64 \n"," 1   Genre                   200 non-null    object\n"," 2   Age                     200 non-null    int64 \n"," 3   Annual Income (k$)      200 non-null    int64 \n"," 4   Spending Score (1-100)  200 non-null    int64 \n","dtypes: int64(4), object(1)\n","memory usage: 7.9+ KB\n","#################### 기초 통계량 ####################\n","        CustomerID   Genre         Age  Annual Income (k$)  \\\n","count   200.000000     200  200.000000          200.000000   \n","unique         NaN       2         NaN                 NaN   \n","top            NaN  Female         NaN                 NaN   \n","freq           NaN     112         NaN                 NaN   \n","mean    100.500000     NaN   38.850000           60.560000   \n","std      57.879185     NaN   13.969007           26.264721   \n","min       1.000000     NaN   18.000000           15.000000   \n","25%      50.750000     NaN   28.750000           41.500000   \n","50%     100.500000     NaN   36.000000           61.500000   \n","75%     150.250000     NaN   49.000000           78.000000   \n","max     200.000000     NaN   70.000000          137.000000   \n","\n","        Spending Score (1-100)  \n","count               200.000000  \n","unique                     NaN  \n","top                        NaN  \n","freq                       NaN  \n","mean                 50.200000  \n","std                  25.823522  \n","min                   1.000000  \n","25%                  34.750000  \n","50%                  50.000000  \n","75%                  73.000000  \n","max                  99.000000  \n"]}]},{"cell_type":"markdown","source":["## 범주형 데이터 (성별) 분석"],"metadata":{"id":"som6Dh5DIOqZ"}},{"cell_type":"code","source":["# 성별 데이터 분포 확인\n","category_columns = ['Genre']\n","category_data = customers[category_columns]\n","\n","import matplotlib.pyplot as plt\n","plt.figure(figsize=(4, 4))\n","\n","np.random.seed(seed)\n","col = (np.random.random(), np.random.random(), np.random.random())\n","\n","customers['Genre'].value_counts().plot(kind='bar', color=col)\n","\n","plt.title('Female VS Male')\n","plt.tight_layout()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":407},"id":"DnnqPW0OFY_o","executionInfo":{"status":"ok","timestamp":1707129197725,"user_tz":-540,"elapsed":329,"user":{"displayName":"맙소사","userId":"12302316345852543158"}},"outputId":"0e4905dd-26fd-412a-db84-faff03bd6b1a"},"execution_count":4,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 400x400 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## 수치형 데이터 (나이, 소득, 쇼핑 점수) 분석"],"metadata":{"id":"aLVl9e28KaX2"}},{"cell_type":"code","source":["# 데이터 가져와서\n","numeric_columns = ['Age', 'Annual Income (k$)', 'Spending Score (1-100)']\n","numeric_data = customers[numeric_columns]"],"metadata":{"id":"5t_Fp41ZNH3B","executionInfo":{"status":"ok","timestamp":1707129200688,"user_tz":-540,"elapsed":343,"user":{"displayName":"맙소사","userId":"12302316345852543158"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["# 분포 시각화\n","plt.figure(figsize=(18, 4))\n","\n","np.random.seed(seed)\n","for idx, numeric in enumerate(numeric_columns) :\n","    col = (np.random.random(), np.random.random(), np.random.random())\n","\n","    plt.subplot(1, 3, idx+1)\n","    plt.hist(numeric_data[numeric], bins=50, color=col, edgecolor='black')\n","    plt.title(numeric)\n","    plt.tight_layout()\n","\n","plt.tight_layout()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":343},"id":"TlY32pAlJXlE","executionInfo":{"status":"ok","timestamp":1707129207012,"user_tz":-540,"elapsed":2622,"user":{"displayName":"맙소사","userId":"12302316345852543158"}},"outputId":"75758a00-4a2a-45d2-f73e-7dcd74c15a1f"},"execution_count":6,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1800x400 with 3 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# 아웃라이어 확인\n","plt.figure(figsize=(12, 4))\n","\n","np.random.seed(seed)\n","for idx, numeric in enumerate(numeric_columns) :\n","\n","    plt.subplot(1, 3, idx+1)\n","    plt.boxplot(numeric_data[numeric].dropna(), labels=[numeric])\n","\n","plt.tight_layout()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":407},"id":"O6occc01NIph","executionInfo":{"status":"ok","timestamp":1707129286016,"user_tz":-540,"elapsed":927,"user":{"displayName":"맙소사","userId":"12302316345852543158"}},"outputId":"5252d5cb-98b1-44a7-8a1b-782016a1e47e"},"execution_count":7,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x400 with 3 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# 상관관계 메트릭스\n","correlation_matrix = numeric_data.corr()\n","\n","# 상관관계 메트릭스 시각화\n","plt.figure(figsize=(4, 4))\n","\n","plt.matshow(correlation_matrix, fignum=1)\n","plt.colorbar()\n","plt.xticks(range(len(correlation_matrix.columns)), correlation_matrix.columns, rotation=90)\n","plt.yticks(range(len(correlation_matrix.columns)), correlation_matrix.columns)\n","\n","for (i, j), val in np.ndenumerate(correlation_matrix):\n","    plt.text(j, i, '{:0.2f}'.format(val), ha='center', va='center', color='black')\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":489},"id":"AWnjHgYzMLS_","executionInfo":{"status":"ok","timestamp":1707129287561,"user_tz":-540,"elapsed":535,"user":{"displayName":"맙소사","userId":"12302316345852543158"}},"outputId":"84aba674-0809-47e2-a42b-fa951a861aea"},"execution_count":8,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 400x400 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# 데이터 전처리"],"metadata":{"id":"-P92eeoBQ7tk"}},{"cell_type":"markdown","source":["## 결측치 제거"],"metadata":{"id":"MsQF-yEHNVUE"}},{"cell_type":"code","source":["# 결측치 값 존재 여부 확인\n","exist_na = customers.isna().values.any()\n","exist_null = customers.isnull().values.any()\n","print(exist_na, exist_null)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fettSEBJO_Sa","executionInfo":{"status":"ok","timestamp":1707129302366,"user_tz":-540,"elapsed":346,"user":{"displayName":"맙소사","userId":"12302316345852543158"}},"outputId":"ce9df29e-0ebd-4b24-d1b6-cd5d3db89240"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["False False\n"]}]},{"cell_type":"markdown","source":["## 카테고리형 변수 인코딩\n"],"metadata":{"id":"724ooU8CUF0I"}},{"cell_type":"code","source":["# 성별을 이진 변수로 변환\n","encoding_map = {'Female': 1, 'Male': 0}\n","categori_data_encode = pd.DataFrame(customers['Genre'].replace(encoding_map))\n","categori_data_encode.columns = ['Gender']\n","categori_data_encode"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"5h0iAI30N--0","executionInfo":{"status":"ok","timestamp":1707129305850,"user_tz":-540,"elapsed":327,"user":{"displayName":"맙소사","userId":"12302316345852543158"}},"outputId":"98534dee-aa71-4539-91d2-73b860c7cf7c"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Gender\n","0         0\n","1         0\n","2         1\n","3         1\n","4         1\n","..      ...\n","195       1\n","196       1\n","197       0\n","198       0\n","199       0\n","\n","[200 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-4999dbcd-9ef6-4815-b2dd-3b29771b5d87\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Gender</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>195</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>196</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>197</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>198</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>199</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>200 rows × 1 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4999dbcd-9ef6-4815-b2dd-3b29771b5d87')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4999dbcd-9ef6-4815-b2dd-3b29771b5d87 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4999dbcd-9ef6-4815-b2dd-3b29771b5d87');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-182f5248-10de-4613-ab90-9e975c2e305e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-182f5248-10de-4613-ab90-9e975c2e305e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-182f5248-10de-4613-ab90-9e975c2e305e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_85fd9708-e96e-42ef-aa0b-1afa803c0428\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('categori_data_encode')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_85fd9708-e96e-42ef-aa0b-1afa803c0428 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('categori_data_encode');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","source":["## 수치형 데이터 스케일링"],"metadata":{"id":"EcpfFr4QQuap"}},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler\n","scaler = StandardScaler()\n","\n","# 수치형 데이터 스케일링\n","numeric_data = customers[numeric_columns]\n","numeric_data_scaled = scaler.fit_transform(numeric_data)\n","numeric_data_scaled = pd.DataFrame(numeric_data_scaled)\n","numeric_data_scaled.columns = numeric_columns\n","numeric_data_scaled"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"1rs8aN1TQyWv","executionInfo":{"status":"ok","timestamp":1707129328908,"user_tz":-540,"elapsed":1369,"user":{"displayName":"맙소사","userId":"12302316345852543158"}},"outputId":"a6771494-37fa-4411-e0d9-06877b47a424"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          Age  Annual Income (k$)  Spending Score (1-100)\n","0   -1.424569           -1.738999               -0.434801\n","1   -1.281035           -1.738999                1.195704\n","2   -1.352802           -1.700830               -1.715913\n","3   -1.137502           -1.700830                1.040418\n","4   -0.563369           -1.662660               -0.395980\n","..        ...                 ...                     ...\n","195 -0.276302            2.268791                1.118061\n","196  0.441365            2.497807               -0.861839\n","197 -0.491602            2.497807                0.923953\n","198 -0.491602            2.917671               -1.250054\n","199 -0.635135            2.917671                1.273347\n","\n","[200 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-842e1c06-8097-412b-b51e-2c212bc7709c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>Annual Income (k$)</th>\n","      <th>Spending Score (1-100)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-1.424569</td>\n","      <td>-1.738999</td>\n","      <td>-0.434801</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>-1.281035</td>\n","      <td>-1.738999</td>\n","      <td>1.195704</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>-1.352802</td>\n","      <td>-1.700830</td>\n","      <td>-1.715913</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>-1.137502</td>\n","      <td>-1.700830</td>\n","      <td>1.040418</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>-0.563369</td>\n","      <td>-1.662660</td>\n","      <td>-0.395980</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>195</th>\n","      <td>-0.276302</td>\n","      <td>2.268791</td>\n","      <td>1.118061</td>\n","    </tr>\n","    <tr>\n","      <th>196</th>\n","      <td>0.441365</td>\n","      <td>2.497807</td>\n","      <td>-0.861839</td>\n","    </tr>\n","    <tr>\n","      <th>197</th>\n","      <td>-0.491602</td>\n","      <td>2.497807</td>\n","      <td>0.923953</td>\n","    </tr>\n","    <tr>\n","      <th>198</th>\n","      <td>-0.491602</td>\n","      <td>2.917671</td>\n","      <td>-1.250054</td>\n","    </tr>\n","    <tr>\n","      <th>199</th>\n","      <td>-0.635135</td>\n","      <td>2.917671</td>\n","      <td>1.273347</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>200 rows × 3 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-842e1c06-8097-412b-b51e-2c212bc7709c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-842e1c06-8097-412b-b51e-2c212bc7709c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-842e1c06-8097-412b-b51e-2c212bc7709c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-48d88b0b-55aa-4daf-8313-832cb4043d2c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-48d88b0b-55aa-4daf-8313-832cb4043d2c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-48d88b0b-55aa-4daf-8313-832cb4043d2c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_99ed7763-2944-4197-b081-759f9ae07504\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('numeric_data_scaled')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_99ed7763-2944-4197-b081-759f9ae07504 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('numeric_data_scaled');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":11}]},{"cell_type":"markdown","source":["## 데이터 합치기"],"metadata":{"id":"p9ENrBeKRgiy"}},{"cell_type":"code","source":["customers_combined = pd.concat([numeric_data_scaled,\n","                               categori_data_encode],\n","                              axis=1)\n","customers_combined"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"XC4B4TUyRe9S","executionInfo":{"status":"ok","timestamp":1707129345823,"user_tz":-540,"elapsed":300,"user":{"displayName":"맙소사","userId":"12302316345852543158"}},"outputId":"e58b67bb-12da-4f0d-a249-867deb9046a7"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          Age  Annual Income (k$)  Spending Score (1-100)  Gender\n","0   -1.424569           -1.738999               -0.434801       0\n","1   -1.281035           -1.738999                1.195704       0\n","2   -1.352802           -1.700830               -1.715913       1\n","3   -1.137502           -1.700830                1.040418       1\n","4   -0.563369           -1.662660               -0.395980       1\n","..        ...                 ...                     ...     ...\n","195 -0.276302            2.268791                1.118061       1\n","196  0.441365            2.497807               -0.861839       1\n","197 -0.491602            2.497807                0.923953       0\n","198 -0.491602            2.917671               -1.250054       0\n","199 -0.635135            2.917671                1.273347       0\n","\n","[200 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-caee6e44-59be-4a63-a640-09d16ea1d05f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>Annual Income (k$)</th>\n","      <th>Spending Score (1-100)</th>\n","      <th>Gender</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-1.424569</td>\n","      <td>-1.738999</td>\n","      <td>-0.434801</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>-1.281035</td>\n","      <td>-1.738999</td>\n","      <td>1.195704</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>-1.352802</td>\n","      <td>-1.700830</td>\n","      <td>-1.715913</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>-1.137502</td>\n","      <td>-1.700830</td>\n","      <td>1.040418</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>-0.563369</td>\n","      <td>-1.662660</td>\n","      <td>-0.395980</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>195</th>\n","      <td>-0.276302</td>\n","      <td>2.268791</td>\n","      <td>1.118061</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>196</th>\n","      <td>0.441365</td>\n","      <td>2.497807</td>\n","      <td>-0.861839</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>197</th>\n","      <td>-0.491602</td>\n","      <td>2.497807</td>\n","      <td>0.923953</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>198</th>\n","      <td>-0.491602</td>\n","      <td>2.917671</td>\n","      <td>-1.250054</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>199</th>\n","      <td>-0.635135</td>\n","      <td>2.917671</td>\n","      <td>1.273347</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>200 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-caee6e44-59be-4a63-a640-09d16ea1d05f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-caee6e44-59be-4a63-a640-09d16ea1d05f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-caee6e44-59be-4a63-a640-09d16ea1d05f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c846a636-f7a7-46e9-9b4c-d532f338d1e2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c846a636-f7a7-46e9-9b4c-d532f338d1e2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c846a636-f7a7-46e9-9b4c-d532f338d1e2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_f8c8d996-1746-41de-a20f-a4210c5e58f6\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('customers_combined')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_f8c8d996-1746-41de-a20f-a4210c5e58f6 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('customers_combined');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","source":["# 모델 구축 및 결과 확인"],"metadata":{"id":"5FAePV7KWwpk"}},{"cell_type":"markdown","source":["## K value 서칭"],"metadata":{"id":"kDp714loy_NZ"}},{"cell_type":"code","source":["from sklearn.cluster import KMeans\n","from sklearn.metrics import silhouette_score\n","\n","inertia, silhouette = [], []\n","K_range = range(2, 11)\n","for k in K_range:\n","    kmeans = KMeans(n_clusters=k, init='k-means++', n_init=10, random_state=0)\n","    kmeans.fit(customers_combined)\n","    inertia.append(kmeans.inertia_)\n","\n","    y_kmeans_silhouette = kmeans.predict(customers_combined)\n","    silhouette.append(silhouette_score(customers_combined, y_kmeans_silhouette))"],"metadata":{"id":"9FWyu916SeuC","executionInfo":{"status":"ok","timestamp":1707129369443,"user_tz":-540,"elapsed":1744,"user":{"displayName":"맙소사","userId":"12302316345852543158"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["plt.figure(figsize=(8, 10))\n","\n","plt.subplot(2, 1, 1)\n","plt.plot(K_range, inertia, label='SSE', marker='o')\n","plt.xlabel('Number of clusters')\n","plt.ylabel('Inertia')\n","plt.title('Elbow Method - SSE')\n","plt.legend()\n","\n","plt.subplot(2, 1, 2)\n","plt.plot(K_range, silhouette, label='Silhouette', marker='o')\n","plt.xlabel('Number of clusters')\n","plt.ylabel('Silhouette')\n","plt.title('Elbow Method - Silhouette')\n","plt.legend()\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":872},"id":"rbJyx2xySrwW","executionInfo":{"status":"ok","timestamp":1707129372170,"user_tz":-540,"elapsed":1089,"user":{"displayName":"맙소사","userId":"12302316345852543158"}},"outputId":"5a829d4c-87c5-414a-867e-1394458cb02f"},"execution_count":14,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x1000 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# 최대 실루엣 계수의 값을 갖는 cluster의 수\n","max_shil = max(silhouette)\n","best_depth = K_range[silhouette.index(max_shil)]\n","print(f'최대 실루엣 계수 값을 갖는 cluster는 {best_depth} 개')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KGEEsPWbTjX8","executionInfo":{"status":"ok","timestamp":1707129452362,"user_tz":-540,"elapsed":330,"user":{"displayName":"맙소사","userId":"12302316345852543158"}},"outputId":"4248533d-4e13-4069-bdfb-51cab3d3bc0d"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["최대 실루엣 계수 값을 갖는 cluster는 6 개\n"]}]},{"cell_type":"markdown","source":["## 학습 진행"],"metadata":{"id":"VV2m_aSDSccH"}},{"cell_type":"code","source":["kmeans = KMeans(n_clusters=6,\n","                init='k-means++',\n","                n_init=10,\n","                random_state=0)\n","kmeans.fit(customers_combined)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"-jEuBKhfxg2G","executionInfo":{"status":"ok","timestamp":1707129454666,"user_tz":-540,"elapsed":3,"user":{"displayName":"맙소사","userId":"12302316345852543158"}},"outputId":"0c5fbe45-c863-4813-92eb-b6c3be608489"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["KMeans(n_clusters=6, n_init=10, random_state=0)"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KMeans(n_clusters=6, n_init=10, random_state=0)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KMeans</label><div class=\"sk-toggleable__content\"><pre>KMeans(n_clusters=6, n_init=10, random_state=0)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":16}]},{"cell_type":"markdown","source":["## 학습 모델 평가 진행"],"metadata":{"id":"iN95rRaC0F-O"}},{"cell_type":"code","source":["y_pred = kmeans.predict(customers_combined)\n","silhouette_avg = silhouette_score(customers_combined, y_pred)\n","\n","print(\"SSE Value : {:.2f}\".format(kmeans.inertia_))\n","print(\"Silhouette Score: {:.2f}\".format(silhouette_avg))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4tWtj6D0yS4q","executionInfo":{"status":"ok","timestamp":1707129481304,"user_tz":-540,"elapsed":272,"user":{"displayName":"맙소사","userId":"12302316345852543158"}},"outputId":"c9972256-8a57-439f-dfc5-afbb22bd080d"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["SSE Value : 181.95\n","Silhouette Score: 0.36\n"]}]},{"cell_type":"markdown","source":["## 결과 해석"],"metadata":{"id":"4CyxnAj97Jkz"}},{"cell_type":"code","source":["# 우리가 사용한 4차원 데이터를 시각화하기 위해 2차원 데이터로 변환 (t-SNE 알고리즘 활용)\n","from sklearn.manifold import TSNE\n","\n","tsne = TSNE(n_components=2, random_state=seed)\n","customers_tsne = tsne.fit_transform(customers_combined)"],"metadata":{"id":"76WClJePq_B4","executionInfo":{"status":"ok","timestamp":1707129754198,"user_tz":-540,"elapsed":3551,"user":{"displayName":"맙소사","userId":"12302316345852543158"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["# 2차원으로 변화된 데이터에 feature 이름을 넣어주고\n","# K-means가 예측한 각 데이터의 클러스터링 인덱스를 제공\n","customers_tsne_df = pd.DataFrame(data=customers_tsne, columns=['TSNE1', 'TSNE2'])\n","customers_tsne_df['Cluster'] = y_pred\n","\n","customers_tsne_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"c5i72G2dys-f","executionInfo":{"status":"ok","timestamp":1707129755794,"user_tz":-540,"elapsed":307,"user":{"displayName":"맙소사","userId":"12302316345852543158"}},"outputId":"6ca751c2-5104-4696-bd17-2d68709365c6"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         TSNE1      TSNE2  Cluster\n","0     5.398976  -6.782193        2\n","1     3.538486  -8.746181        2\n","2    -1.191501   0.449074        4\n","3     1.512132  -8.707607        2\n","4    -1.552538  -1.774961        4\n","..         ...        ...      ...\n","195  17.145332  -0.577330        1\n","196  -4.962203  11.667418        5\n","197  17.546545  -1.509284        1\n","198  -2.459733  10.424925        5\n","199  17.690046  -1.487739        1\n","\n","[200 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-bd44a35b-44b9-45fc-952a-3e9bdaf9a5bc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>TSNE1</th>\n","      <th>TSNE2</th>\n","      <th>Cluster</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5.398976</td>\n","      <td>-6.782193</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3.538486</td>\n","      <td>-8.746181</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>-1.191501</td>\n","      <td>0.449074</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.512132</td>\n","      <td>-8.707607</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>-1.552538</td>\n","      <td>-1.774961</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>195</th>\n","      <td>17.145332</td>\n","      <td>-0.577330</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>196</th>\n","      <td>-4.962203</td>\n","      <td>11.667418</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>197</th>\n","      <td>17.546545</td>\n","      <td>-1.509284</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>198</th>\n","      <td>-2.459733</td>\n","      <td>10.424925</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>199</th>\n","      <td>17.690046</td>\n","      <td>-1.487739</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>200 rows × 3 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bd44a35b-44b9-45fc-952a-3e9bdaf9a5bc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-bd44a35b-44b9-45fc-952a-3e9bdaf9a5bc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-bd44a35b-44b9-45fc-952a-3e9bdaf9a5bc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2badcb36-aed9-418a-b747-0bf31e916f9a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2badcb36-aed9-418a-b747-0bf31e916f9a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2badcb36-aed9-418a-b747-0bf31e916f9a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_d83a1d94-2ea4-4524-a443-fa1e631fa27c\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('customers_tsne_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_d83a1d94-2ea4-4524-a443-fa1e631fa27c button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('customers_tsne_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["# 시각화\n","np.random.seed(seed)\n","\n","plt.figure(figsize=(10, 8))\n","\n","for idx in range(kmeans.n_clusters):\n","    _color = (np.random.random(), np.random.random(), np.random.random())\n","    cluster_data = customers_tsne_df[customers_tsne_df['Cluster'] == idx]\n","    plt.scatter(cluster_data['TSNE1'],\n","                cluster_data['TSNE2'],\n","                color=_color,\n","                label=f'Cluster {idx+1}',\n","                marker='o')\n","plt.title('Customer Segments - t-SNE 2D')\n","\n","plt.legend()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":699},"id":"d1A1Klhsys8d","executionInfo":{"status":"ok","timestamp":1707129760112,"user_tz":-540,"elapsed":967,"user":{"displayName":"맙소사","userId":"12302316345852543158"}},"outputId":"66828509-b186-4ff9-f2d5-5c75666d1569"},"execution_count":20,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x800 with 1 Axes>"],"image/png":"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eeedmjZtmq6++modPHhQS5Ys0X/8x39o48aNzUFq2bJluv766/Xd735XN998syoqKvSjH/1Iubm56tmzZ6vrLlq0SGlpaZo3b17z6+/cubPsdrsOHz6su+++Wx988IGeeuop9e7dW7/97W8DnpMkHT58WJMnT9ZFF12kadOm6cUXX9Qvf/lLDRkyROeee65KSko0f/58/fa3v9XPf/5zffe735UknXnmmWpoaNCkSZNUX1+vOXPmqHv37tq7d69effVVHTlyRNnZ2X6/dmb84he/0BdffKG33npLzz77rKnHFBYWyuVyNf98mPHTn/5UCxYs0Pz58zVlypR2g9bx48d16NChVrfn5OSoU6fA3mbU1taqtrZWXbp0Mf2YzMxMTZkyRX/+85+1detWv1vwAKCZAQAxrrq62pBk/PCHPzQ1fufOnYYk48knn2x1nyTjrrvuav48OzvbmD17tt/rnX/++UZhYWGr2x999FFDkvHcc88139bQ0GCMHTvWyMzMNGpqarzmk5eXZxw5cqR57B133GFIMoYNG2Y0NjY2337ppZcaycnJRl1dnWEYhnH06FEjJyfHuOaaa7yef//+/UZ2drbX7TNmzDAkGfPmzfP7mjzefPNNIykpyUhKSjLGjh1r3H777cYbb7xhNDQ0eI2rqKgwkpKSjIULF3rd/sknnxidOnVqvr2+vt741re+ZYwePdrrNT311FOGJOOss85qvm3NmjWGJGPw4MFez3fppZcaNpvNOPfcc72ea+zYsV7fB7NzMgzDOOusswxJxjPPPNN8W319vdG9e3dj6tSpzbd99NFHPn92Nm7caEgy/vnPf/r6Mlpm9uzZRiC/uvfv32/k5eUZkowBAwYYs2bNMv761796/Zx5zJgxw8jIyDAMwzCefvppQ5KxYsWK5vslef1/wfNz29bH+++/H/DrW7BggSHJWL16tdfthYWFxvnnn9/m4373u98Zkoz/+q//Cvg5ASQmtsMBiHk1NTWSpKysLMuvnZOTow8//FBffPFFwI997bXX1L17d1166aXNt3Xu3Fk33HCDamtr9c4773iNv+SSS7xWDMaMGSNJuvzyy73+oj5mzBg1NDRo7969kqS33npLR44c0aWXXqpDhw41fyQlJWnMmDFas2ZNq7mZPTtxzjnn6P3339cPfvADffzxx3rwwQc1adIk5efn67//+7+bx61YsUJut1vTpk3zmkP37t3Vt2/f5jmsX79eX331la655hqv13TZZZcpNzfX5xyuuOIKde7c2ev1G4ahq666ymvcmDFjtHv3bp08eTKgOXlkZmZ6nTlJTk7WGWecoR07drT7dfJ839544w0dP3683fHh0q1bN3388ceaNWuWDh8+rOXLl+unP/2punbtqgULFrS5feyyyy5T3759NX/+/Ha3mP385z/XW2+91epj4MCBAc313Xff1T333NO8+hkIz+rr0aNHA3ocgMTFdjgAMc/hcEgKzRugBx98UDNmzFBBQYFGjhyp8847T1dccYWKi4vbfeyuXbvUt2/fVuceSkpKmu8/Va9evbw+97yxLigo8Hn74cOHJTWdRZHU5htHz9fHo1OnTj63nbVl9OjRWrFihRoaGvTxxx/r5Zdf1u9+9ztdfPHF2rRpkwYOHKjPP/9chmGob9++Pq/hCTGe19ynT59Wczp1y96pAvm6uN1uVVdX61vf+pbpOXn07Nmz1dav3Nxcbd682efjT9W7d2/NnTtXjzzyiJ5//nl997vf1Q9+8ANdfvnlfrfCebZ/eSQlJSkvL6/d52vp4MGDcrlczZ9nZmY2B4MePXpo2bJl+uMf/6jPP/9cb7zxhh544AH99re/VY8ePXT11Ve3ul5SUpJ+85vfaMaMGXrllVc0ZcqUNp+7b9++OvvsswOe86m2bdumKVOmaPDgwfr//r//L+DHe76GofhDCID4RAgCEPMcDodOO+00bdmyxdT4ts44nPom0mPatGn67ne/q5dffllvvvmmFi9erAceeEArVqzQueee26F5t5SUlBTQ7Z6/0LvdbklN54JOLSvs0fJcRkpKSqtgZkZycrJGjx6t0aNHq1+/frryyiv1z3/+U3fddZfcbrdsNptef/11n/P1vCEPRke+LoHMqb3rtefhhx/WzJkz9V//9V968803dcMNN2jRokX64IMP2gydDz30kO65557mzwsLC4MqtT569GivUH3XXXe16idks9nUr18/9evXT+eff7769u2r559/3mcIkppWgzxng370ox8FPCezdu/ere9///vKzs7Wa6+9FlSQ8fx/v2W4BoC2EIIAxIULLrhAf/rTn/T+++9r7Nixfsd6tl0dOXLE6/aWKzMePXr00HXXXafrrrtOX375pUaMGKGFCxc2h6C2QlVhYaE2b94st9vtFTq2bdvWfL8VTj/9dElN1do6+hd5s0aNGiVJzY0tTz/9dBmGod69e6tfv35tPs7zmsvLyzVx4sTm20+ePKmKigoNHTrUsjmanVMg2isSMGTIEA0ZMkS/+c1v9N5772ncuHFavnx5q3LPHldccYXGjx/f/HlaWlpQz//88897NQNub6WyuLhYubm5PhuTenhWgzzBLhS++uorff/731d9fb1Wr17ts7Jje2pra/Xyyy+roKCgeZUVANrDmSAAceH2229XRkaGrr76ah04cKDV/du3b9djjz0mqWnlqEuXLnr33Xe9xvzxj3/0+tzlcrUqb9y1a1eddtppXqWYMzIyfJZBPu+887R//3698MILzbedPHlSS5YsUWZmps4666zAX6gPkyZNksPh0H333afGxsZW9x88eDDoa69Zs8bnSshrr70mSerfv78k6aKLLlJSUpLuueeeVuMNw9BXX30lqSk8fetb39ITTzzRfHZHanoT79neZxWzcwqEp59SywBdU1Pj9XqkpkBkt9t9lu32KC4u1tlnn938MW7cuKCef9y4cV7X8YSgDz/8UMeOHWt1nXXr1umrr75q/v615fLLL1efPn28VquscuzYMZ133nnau3evXnvttTa3Lfpz4sQJTZ8+XVVVVfr1r39tqq8RAEisBAGIE6effrr++te/6sc//rFKSkp0xRVXaPDgwWpoaNB7773XXJra4+qrr9b999+vq6++WqNGjdK7776rzz77zOuaR48eVc+ePXXxxRdr2LBhyszM1Ntvv62PPvpIDz/8cPO4kSNH6oUXXtDcuXM1evRoZWZm6sILL9TPf/5zPf7445o5c6b+/e9/q6ioSC+++KL+9a9/6dFHH7Xs/ILD4dCyZcs0ffp0jRgxQj/5yU+Ul5enyspKrVy5UuPGjdMf/vCHoK49Z84cHT9+XFOmTNGAAQOav54vvPCCioqKdOWVV0pq+vrfe++9uuOOO5pLXmdlZWnnzp16+eWX9fOf/1y33nqrkpOTdffdd2vOnDn6z//8T02bNk0VFRV66qmndPrpp1v6JtbsnAK9Zk5OjpYvX66srCxlZGRozJgx+vjjj3X99dfrkksuUb9+/XTy5Ek9++yzSkpK0tSpUy17TSNHjpQk3XDDDZo0aZKSkpL0k5/8pM3xzz77rJ5//nlNmTJFI0eOVHJy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mZnNH88884y2b9/uNXbUqFGm57F3715NnjxZl1xyia655pqgXotZrAQBCaBPyRQV9/9ByHoBBVKFrqDoLD/jAACIbg2NVZaOM6tv376y2WwBFz+w25vWPE4NUY2NjV5jrr76ak2aNEkrV67Um2++qUWLFunhhx/WnDlzfF6ztrZWkrRy5Url53v/kTUlJcXrc19b93z54osvNHHiRJ155pn605/+ZOoxHcFKEJAg7PakkPUCogodACBRJHc2d1bF7DiznE6nJk2apKVLl+rYsWOt7m+rhHVeXp4kad++b34Hb9q0qdW4goICzZo1SytWrNAtt9yiJ554QpKUnJwsSXK5vtnNMXDgQKWkpKiyslJ9+vTx+igoKAj4te3du1cTJkzQyJEj9eSTTzYHt1AiBAHosEhUoQMAIBKyHIOVnNzF75jk5DxlOQZb/txLly6Vy+XSGWecoZdeekmff/65ysrK9Pvf/775bE5LnmBy99136/PPP9fKlSv18MMPe4256aab9MYbb2jnzp3asGGD1qxZo5KSEklSYWGhbDabXn31VR08eFC1tbXKysrSrbfeqptvvllPP/20tm/frg0bNmjJkiV6+umnA3pNngDUq1cvPfTQQzp48KD279+v/fv3B/dFMokQBKDDPFXoPMUWWrMp09HTsip0AABEis2WpMKia/2OKSyaFZJ+QcXFxdqwYYMmTpyoW265RYMHD9Y555yj1atXa9ky38UaOnfurL/97W/atm2bhg4dqgceeED33nuv1xiXy6XZs2erpKREkydPVr9+/fTHP/5RkpSfn6977rlH8+bNU7du3XT99ddLkhYsWKA777xTixYtan7cypUr1bt374Be01tvvaXy8nKtXr1aPXv2VI8ePZo/QslmhPKUVRjU1NQoOztb1dXVcjgckZ4OkLC+qQ4n+apCR3U4AEC0qKur086dO9W7d2+lpqYGdY2qqlLtqljmVSQhOTlPhUWzLC+PDW/+vn9mswGFEQBYwlOFrmWfoNS0XH17zBwV9/9BBGcHAIC1nM7xys0d21QtrrFKyZ2dynIMDskKEKxHCAJgGU8VunX/u0gbP1yi+hNVqjtRpQ/W3qNP/v3/acjIq5Xj7GN5dToAACLBZkuSI3tYpKeBIBCCAFhqx6f/rQ/WzlfLnkHHju7VB2vvaf4809FTEyY/whY5AAAQdhRGANCK2+3S7op3tO2Tv2t3xTumm5z6b5rqrbZmr179x49VXvZyB2cLAAAQGFaCAHgpL3u51bkes6s27TdNPZUhyaa1q+aquP8P2BoHAADChpUgAM08Fd5aBhmzqzaBN0M1VFuzR3srSwN8HAAAQPAIQQAktbeVrem2tavm+t0aF2wz1MDDEwAAQPAIQUCUCfY8Tke1v5Wt/VWb9pum+hZseAIAAAgGZ4KAKNKR8zgdZXY1xt84uz1JEyY/8nXTVJvaL5BgU6YjX/m9aCoHAADCh5UgIEp09DxOR5ldjWlvnKdpaqYjv50rNa0WTZj8SNiKIkRqlQ0AgHCy2Wx65ZVXIj2NqEYIAqKAFedxOqr9rWw2ZTp6mlq16VMyRVfdWK6pM97W5Iue1Xcm3KXMLO9QlOnI1wXTXghbn6Dyspf1l8f66KWnz9aqFdP10tNn6y+P9aFENwAgpuzfv19z5sxRcXGxUlJSVFBQoAsvvFCrV68OyfOtXbtWNptNR44cCcn1JekHP/iBevXqpdTUVPXo0UPTp0/XF198EbLnk9gOB0SFQM7jFBSdFZI5+N/KFviqjd2e5DXXM757h/ZWlurY0X3KyOqh/F7jw7YC5FllaxkyPats4QxjAID44TIMbal1q6rRkLOzTYMz7UqyBXYuNhAVFRUaN26ccnJytHjxYg0ZMkSNjY164403NHv2bG3bti1kz91RhmHI5XKpU6fW8WPixIn61a9+pR49emjv3r269dZbdfHFF+u9994L2XxYCQKigBXncazQ1lY2K1ZtPKFowJCfqKDorLBugYv0KhsAIP6UHj6pKz45ods/q9P9O+t1+2d1uuKTEyo9fDJkz3ndddfJZrNp3bp1mjp1qvr166dBgwZp7ty5+uCDD3w+xtdKzqZNm2Sz2VRRUSFJ2rVrly688ELl5uYqIyNDgwYN0muvvaaKigpNnDhRkpSbmyubzaaZM2dKktxutxYtWqTevXsrLS1Nw4YN04svvtjqeV9//XWNHDlSKSkpKi31XVzp5ptv1ne+8x0VFhbqzDPP1Lx58/TBBx+osbGx41+0NrASBEQBq87jWKFPyRQV9/9BxFZtrBYNq2wAgPhSevikFuyob3X7oUZDC3bU685iaXyutW+zq6qqtGrVKi1cuFAZGRmt7s/JyQn62rNnz1ZDQ4PeffddZWRkaOvWrcrMzFRBQYFeeuklTZ06VZ9++qkcDofS0tIkSYsWLdJzzz2n5cuXq2/fvnr33Xd1+eWXKy8vT2ed9c3v03nz5umhhx5ScXGxcnNzTb3O559/XmeeeaY6d+4c9GtqDyEIiAKe8zi1NXvle8UivFXUWm5li2XRssoGAIgPLsPQst0Nfscs392gsTlJlm6NKy8vl2EYGjBggGXX9KisrNTUqVM1ZMgQSVJxcXHzfU6nU5LUtWvX5qBVX1+v++67T2+//bbGjh3b/JjS0lI9/vjjXiFo/vz5Ouecc9qdwy9/+Uv94Q9/0PHjx/Wd73xHr776qlUvzye2wwFRwHMep0nLfzDDX0UtnkTTKhsAIPZtqXXrUKP/FhAHG5vOClnJMNprOxG8G264Qffee6/GjRunu+66S5s3b/Y7vry8XMePH9c555yjzMzM5o9nnnlG27dv9xo7atQoU3O47bbbtHHjRr355ptKSkrSFVdcEdLXTAgCokQoz+MkMiur3gEAUNVOAAp0nFl9+/aVzWYLuPiB3d70dv/UQNHyrM3VV1+tHTt2aPr06frkk080atQoLVmypM1r1tbWSpJWrlypTZs2NX9s3brV61yQJJ9b93zp0qWL+vXrp3POOUd///vf9dprr7V5zskKbIcDokg8nMdxu11RNX+rq94BABKbs7O5LW5mx5l+XqdTkyZN0tKlS3XDDTe0ChdHjhzxeS4oLy9PkrRv377mMzmbNm1qNa6goECzZs3SrFmzdMcdd+iJJ57QnDlzlJycLElyub4pIDRw4EClpKSosrLSa+ubVdzuplW0+vrW566sQggCokwsn8cpL3tZa1fN9SpEkOnoqQmTH4noSpZnla313PIjPjcAQGwZnGlXl842v1vi8r4ul221pUuXaty4cTrjjDM0f/58DR06VCdPntRbb72lZcuWqaysrNVj+vTpo4KCAt19991auHChPvvsMz388MNeY2666Sade+656tevnw4fPqw1a9aopKREklRYWCibzaZXX31V5513ntLS0pSVlaVbb71VN998s9xut8aPH6/q6mr961//ksPh0IwZM0y/pg8//FAfffSRxo8fr9zcXG3fvl133nmnTj/99ObzRqFACAJgiWjvxRMPq2wAgMhLstl0bUGyz+pwHrMKkkPSL6i4uFgbNmzQwoULdcstt2jfvn3Ky8vTyJEjtWzZMp+P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oOMyRpcofWT/pmpxR44qKSdLqQN6hWQFCNYjBAEhYnaFxyz/54jaVnf8kDId+TQGBQDAYja73dIy2AgfQhAQAu318glWW+eI2kNjUAAAgG+wXgdYzEwvn47oUzJFV91Yrqkz3tYZ3zV3+JDGoAAAAN8gBAEWMtvLx+12+bjfPM85ou9M+C2NQQEAAAJECAIsZLaXz97KUkuej8agAAAAgSMEARYye/bGyjM6nnNCmY58r9szHfm6YNoLlMMGAABogcIIgIXMnr2x+owOjUEBAADMIwQBFmq/l4+tuV+P1cz2GwIAAEh0bIcDLMQZHQAAEGk2m02vvPJKpKcR1QhBgMU4owMAAEJl//79mjNnjoqLi5WSkqKCggJdeOGFWr16dUieb+3atbLZbDpy5EhIri9JRUVFstlsXh/3339/yJ5PYjscEBKc0QEAIP4ZhluHqj5VXf0RpabkqIuzv2y20K0xVFRUaNy4ccrJydHixYs1ZMgQNTY26o033tDs2bO1bdu2kD13RxmGIZfLpU6dfMeP+fPn65prrmn+PCsrK6TzYSUICBHPGZ0BQ36igqKzCEAAAMSRvfvXa9XauSpdd7/Wf7xcpevu16q1c7V3//qQPed1110nm82mdevWaerUqerXr58GDRqkuXPn6oMPPvD5GF8rOZs2bZLNZlNFRYUkadeuXbrwwguVm5urjIwMDRo0SK+99poqKio0ceJESVJubq5sNptmzpwpSXK73Vq0aJF69+6ttLQ0DRs2TC+++GKr53399dc1cuRIpaSkqLS07RYhWVlZ6t69e/NHRkZGx75Y7SAEAQAAAAHYu3+91m1corq6w16319Ud1rqNS0IShKqqqrRq1SrNnj3bZ0DIyckJ+tqzZ89WfX293n33XX3yySd64IEHlJmZqYKCAr300kuSpE8//VT79u3TY489JklatGiRnnnmGS1fvlz/93//p5tvvlmXX3653nnnHa9rz5s3T/fff7/Kyso0dOjQNudw//3361vf+paGDx+uxYsX6+TJk0G/HjPYDgcAAACYZBhubS57zu+YT8qe12ndRli6Na68vFyGYWjAgAGWXdOjsrJSU6dO1ZAhQyRJxcXFzfc5nU5JUteuXZuDVn19ve677z69/fbbGjt2bPNjSktL9fjjj+uss76pVjt//nydc845fp//hhtu0IgRI+R0OvXe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69ev1+jRo62Oh14oLCxUfn6+5s+frwULFujixYv68uWL92lx8C979uzRsmXLlJiYqHfv3qm4uFghISFau3at1dHQS58/f+5y5a6+vl41NTWKjIzUhAkTtHPnTp04cUJTpkxRUlKSDh8+rISEBO8fMjD49DTTyMhIlZSUaNWqVYqLi1NdXZ327dunyZMnKzMz08LU+IUBfJCfn28k/fK6d++e95yGhgaTnZ1thg8fbqKioszu3bvN9+/frQuNXquurjYul8uEh4ebYcOGmenTp5tTp06Zb9++WR0NPrh8+bKZMGGCcTgcZsGCBebRo0dWR0If5ebmmvj4eONwOMzYsWNNbm6uqa2ttToWfHDv3r1uPzfz8/ONMcZ0dHSYw4cPm9jYWON0Os3SpUvNq1evrA2NHvU0069fv5qMjAwTHR1thg4dahITE82mTZuMx+OxOjb+JcgYYyzoXgAAAABgCf5PEAAAAABboQQBAAAAsBVKEAAAAABboQQBAAAAsBVKEAAAAABboQQBAAAAsBVKEAAAAABboQQBAAAAsBVKEAAAAABboQQBAAAAsBVKEAAAAABboQQBAAAAsJX/Aayu5jgvwC+LAAAAAElFTkSuQmCC\n"},"metadata":{}}]},{"cell_type":"code","source":["customers_combined"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"uAklLGZ4AnFw","executionInfo":{"status":"ok","timestamp":1703727917523,"user_tz":-540,"elapsed":7,"user":{"displayName":"정정민","userId":"12370841041645303331"}},"outputId":"8691b2c6-8fe9-4ff0-a78a-ed7e5d395313"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          Age  Annual Income (k$)  Spending Score (1-100)  Gender\n","0   -1.424569           -1.738999               -0.434801       0\n","1   -1.281035           -1.738999                1.195704       0\n","2   -1.352802           -1.700830               -1.715913       1\n","3   -1.137502           -1.700830                1.040418       1\n","4   -0.563369           -1.662660               -0.395980       1\n","..        ...                 ...                     ...     ...\n","195 -0.276302            2.268791                1.118061       1\n","196  0.441365            2.497807               -0.861839       1\n","197 -0.491602            2.497807                0.923953       0\n","198 -0.491602            2.917671               -1.250054       0\n","199 -0.635135            2.917671                1.273347       0\n","\n","[200 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-ef8920ba-0f99-4e2f-9353-2ab796af50b1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>Annual Income (k$)</th>\n","      <th>Spending Score (1-100)</th>\n","      <th>Gender</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-1.424569</td>\n","      <td>-1.738999</td>\n","      <td>-0.434801</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>-1.281035</td>\n","      <td>-1.738999</td>\n","      <td>1.195704</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>-1.352802</td>\n","      <td>-1.700830</td>\n","      <td>-1.715913</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>-1.137502</td>\n","      <td>-1.700830</td>\n","      <td>1.040418</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>-0.563369</td>\n","      <td>-1.662660</td>\n","      <td>-0.395980</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>195</th>\n","      <td>-0.276302</td>\n","      <td>2.268791</td>\n","      <td>1.118061</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>196</th>\n","      <td>0.441365</td>\n","      <td>2.497807</td>\n","      <td>-0.861839</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>197</th>\n","      <td>-0.491602</td>\n","      <td>2.497807</td>\n","      <td>0.923953</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>198</th>\n","      <td>-0.491602</td>\n","      <td>2.917671</td>\n","      <td>-1.250054</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>199</th>\n","      <td>-0.635135</td>\n","      <td>2.917671</td>\n","      <td>1.273347</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>200 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ef8920ba-0f99-4e2f-9353-2ab796af50b1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ef8920ba-0f99-4e2f-9353-2ab796af50b1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ef8920ba-0f99-4e2f-9353-2ab796af50b1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-000ed8f2-977d-42bc-9b91-c10098af34e7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-000ed8f2-977d-42bc-9b91-c10098af34e7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-000ed8f2-977d-42bc-9b91-c10098af34e7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_486d6e9e-83f8-4c27-8795-5074be0d4b46\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('customers_combined')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_486d6e9e-83f8-4c27-8795-5074be0d4b46 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('customers_combined');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":21}]},{"cell_type":"markdown","source":["## Cluster 별 의미 찾기"],"metadata":{"id":"OV237j1CFip6"}},{"cell_type":"code","source":["# 원래 데이터에서 재건하기\n","customers_combined['Cluster'] = kmeans.labels_\n","\n","# 수치형 데이터 스케일링 작업을 역으로 수행하기\n","original_numeric_data = pd.DataFrame(scaler.inverse_transform(customers_combined[numeric_columns]))\n","original_numeric_data.columns = numeric_columns\n","\n","# 범주형 데이터 역 인코딩 (필요시)\n","# 수치형으로 되어있던 데이터를 다시 범주형으로 바꾸면 특성 파악이 눈에 안들어올 수 있음!\n","reverse_encoding_map = {v: k for k, v in encoding_map.items()}\n","original_category_data = pd.DataFrame(customers_combined['Gender'].replace(reverse_encoding_map))\n","original_category_data.columns = category_columns\n","\n","# pandas로 원래 데이터 다시 만들기\n","labeled_origin_date = pd.concat([customers_combined['Cluster'],\n","                                 original_numeric_data,\n","                                 customers_combined['Gender']],\n","                                #  original_category_data], # 범주형 데이터 필요시 사용\n","                                axis=1)\n","labeled_origin_date"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"Qp_w3huSys3T","executionInfo":{"status":"ok","timestamp":1703727917523,"user_tz":-540,"elapsed":6,"user":{"displayName":"정정민","userId":"12370841041645303331"}},"outputId":"a9fe7006-b8e4-405c-a939-34d088ea9e7c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Cluster   Age  Annual Income (k$)  Spending Score (1-100)  Gender\n","0          2  19.0                15.0                    39.0       0\n","1          2  21.0                15.0                    81.0       0\n","2          4  20.0                16.0                     6.0       1\n","3          2  23.0                16.0                    77.0       1\n","4          4  31.0                17.0                    40.0       1\n","..       ...   ...                 ...                     ...     ...\n","195        1  35.0               120.0                    79.0       1\n","196        5  45.0               126.0                    28.0       1\n","197        1  32.0               126.0                    74.0       0\n","198        5  32.0               137.0                    18.0       0\n","199        1  30.0               137.0                    83.0       0\n","\n","[200 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-54064598-03ca-44ce-acb6-06ef5361c241\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Cluster</th>\n","      <th>Age</th>\n","      <th>Annual Income (k$)</th>\n","      <th>Spending Score (1-100)</th>\n","      <th>Gender</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2</td>\n","      <td>19.0</td>\n","      <td>15.0</td>\n","      <td>39.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>21.0</td>\n","      <td>15.0</td>\n","      <td>81.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4</td>\n","      <td>20.0</td>\n","      <td>16.0</td>\n","      <td>6.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","      <td>23.0</td>\n","      <td>16.0</td>\n","      <td>77.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>31.0</td>\n","      <td>17.0</td>\n","      <td>40.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>195</th>\n","      <td>1</td>\n","      <td>35.0</td>\n","      <td>120.0</td>\n","      <td>79.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>196</th>\n","      <td>5</td>\n","      <td>45.0</td>\n","      <td>126.0</td>\n","      <td>28.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>197</th>\n","      <td>1</td>\n","      <td>32.0</td>\n","      <td>126.0</td>\n","      <td>74.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>198</th>\n","      <td>5</td>\n","      <td>32.0</td>\n","      <td>137.0</td>\n","      <td>18.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>199</th>\n","      <td>1</td>\n","      <td>30.0</td>\n","      <td>137.0</td>\n","      <td>83.0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>200 rows × 5 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-54064598-03ca-44ce-acb6-06ef5361c241')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-54064598-03ca-44ce-acb6-06ef5361c241 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-54064598-03ca-44ce-acb6-06ef5361c241');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-25fcf1e5-9171-40ad-830b-8b94fe8ffb85\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-25fcf1e5-9171-40ad-830b-8b94fe8ffb85')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-25fcf1e5-9171-40ad-830b-8b94fe8ffb85 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_b16faf77-07ee-4370-8805-c2c8ec8b4baa\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('labeled_origin_date')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_b16faf77-07ee-4370-8805-c2c8ec8b4baa button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('labeled_origin_date');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["# 각 군집에 대한 기술통계 계산\n","cluster_description = labeled_origin_date.groupby('Cluster').describe().transpose()\n","\n","# 군집별 평균값\n","cluster_means = labeled_origin_date.groupby('Cluster').mean().transpose()"],"metadata":{"id":"_uQZPLnmA3f5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cluster_description"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"7OX0yr9NBslD","executionInfo":{"status":"ok","timestamp":1703727917524,"user_tz":-540,"elapsed":6,"user":{"displayName":"정정민","userId":"12370841041645303331"}},"outputId":"415343fd-39f7-4b34-fcb2-07d1b31e79e7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Cluster                               0           1          2          3  \\\n","Age                    count  38.000000   39.000000  23.000000  45.000000   \n","                       mean   27.000000   32.692308  25.000000  56.333333   \n","                       std     7.032742    3.728650   5.300086   8.453079   \n","                       min    18.000000   27.000000  18.000000  43.000000   \n","                       25%    21.000000   30.000000  21.000000  49.000000   \n","                       50%    26.500000   32.000000  23.000000  54.000000   \n","                       75%    31.750000   35.500000  29.500000  65.000000   \n","                       max    40.000000   40.000000  35.000000  70.000000   \n","Annual Income (k$)     count  38.000000   39.000000  23.000000  45.000000   \n","                       mean   56.657895   86.538462  25.260870  54.266667   \n","                       std     9.905708   16.312485   7.723738   8.975725   \n","                       min    39.000000   69.000000  15.000000  38.000000   \n","                       25%    48.000000   75.500000  19.000000  47.000000   \n","                       50%    59.500000   79.000000  24.000000  54.000000   \n","                       75%    63.750000   95.000000  31.500000  62.000000   \n","                       max    76.000000  137.000000  39.000000  79.000000   \n","Spending Score (1-100) count  38.000000   39.000000  23.000000  45.000000   \n","                       mean   49.131579   82.128205  77.608696  49.066667   \n","                       std     7.853975    9.364489  13.272457   6.300794   \n","                       min    29.000000   63.000000  39.000000  35.000000   \n","                       25%    42.000000   74.500000  73.000000  45.000000   \n","                       50%    50.000000   83.000000  77.000000  49.000000   \n","                       75%    55.000000   90.000000  84.500000  55.000000   \n","                       max    61.000000   97.000000  99.000000  60.000000   \n","Gender                 count  38.000000   39.000000  23.000000  45.000000   \n","                       mean    0.657895    0.538462   0.565217   0.577778   \n","                       std     0.480783    0.505035   0.506870   0.499495   \n","                       min     0.000000    0.000000   0.000000   0.000000   \n","                       25%     0.000000    0.000000   0.000000   0.000000   \n","                       50%     1.000000    1.000000   1.000000   1.000000   \n","                       75%     1.000000    1.000000   1.000000   1.000000   \n","                       max     1.000000    1.000000   1.000000   1.000000   \n","\n","Cluster                               4           5  \n","Age                    count  21.000000   34.000000  \n","                       mean   45.523810   41.264706  \n","                       std    11.766984   10.768385  \n","                       min    20.000000   19.000000  \n","                       25%    36.000000   34.500000  \n","                       50%    46.000000   42.500000  \n","                       75%    53.000000   47.000000  \n","                       max    67.000000   59.000000  \n","Annual Income (k$)     count  21.000000   34.000000  \n","                       mean   26.285714   88.500000  \n","                       std     7.437357   16.533254  \n","                       min    16.000000   71.000000  \n","                       25%    20.000000   77.250000  \n","                       50%    25.000000   85.500000  \n","                       75%    33.000000   97.750000  \n","                       max    39.000000  137.000000  \n","Spending Score (1-100) count  21.000000   34.000000  \n","                       mean   19.380952   16.764706  \n","                       std    12.555780    9.881292  \n","                       min     3.000000    1.000000  \n","                       25%     6.000000   10.000000  \n","                       50%    15.000000   15.500000  \n","                       75%    31.000000   22.750000  \n","                       max    40.000000   39.000000  \n","Gender                 count  21.000000   34.000000  \n","                       mean    0.619048    0.411765  \n","                       std     0.497613    0.499554  \n","                       min     0.000000    0.000000  \n","                       25%     0.000000    0.000000  \n","                       50%     1.000000    0.000000  \n","                       75%     1.000000    1.000000  \n","                       max     1.000000    1.000000  "],"text/html":["\n","  <div id=\"df-a82a4096-237d-435e-8a9e-9f5f031291cb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Cluster</th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th rowspan=\"8\" valign=\"top\">Age</th>\n","      <th>count</th>\n","      <td>38.000000</td>\n","      <td>39.000000</td>\n","      <td>23.000000</td>\n","      <td>45.000000</td>\n","      <td>21.000000</td>\n","      <td>34.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>27.000000</td>\n","      <td>32.692308</td>\n","      <td>25.000000</td>\n","      <td>56.333333</td>\n","      <td>45.523810</td>\n","      <td>41.264706</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>7.032742</td>\n","      <td>3.728650</td>\n","      <td>5.300086</td>\n","      <td>8.453079</td>\n","      <td>11.766984</td>\n","      <td>10.768385</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>18.000000</td>\n","      <td>27.000000</td>\n","      <td>18.000000</td>\n","      <td>43.000000</td>\n","      <td>20.000000</td>\n","      <td>19.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>21.000000</td>\n","      <td>30.000000</td>\n","      <td>21.000000</td>\n","      <td>49.000000</td>\n","      <td>36.000000</td>\n","      <td>34.500000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>26.500000</td>\n","      <td>32.000000</td>\n","      <td>23.000000</td>\n","      <td>54.000000</td>\n","      <td>46.000000</td>\n","      <td>42.500000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>31.750000</td>\n","      <td>35.500000</td>\n","      <td>29.500000</td>\n","      <td>65.000000</td>\n","      <td>53.000000</td>\n","      <td>47.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>40.000000</td>\n","      <td>40.000000</td>\n","      <td>35.000000</td>\n","      <td>70.000000</td>\n","      <td>67.000000</td>\n","      <td>59.000000</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"8\" valign=\"top\">Annual Income (k$)</th>\n","      <th>count</th>\n","      <td>38.000000</td>\n","      <td>39.000000</td>\n","      <td>23.000000</td>\n","      <td>45.000000</td>\n","      <td>21.000000</td>\n","      <td>34.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>56.657895</td>\n","      <td>86.538462</td>\n","      <td>25.260870</td>\n","      <td>54.266667</td>\n","      <td>26.285714</td>\n","      <td>88.500000</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>9.905708</td>\n","      <td>16.312485</td>\n","      <td>7.723738</td>\n","      <td>8.975725</td>\n","      <td>7.437357</td>\n","      <td>16.533254</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>39.000000</td>\n","      <td>69.000000</td>\n","      <td>15.000000</td>\n","      <td>38.000000</td>\n","      <td>16.000000</td>\n","      <td>71.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>48.000000</td>\n","      <td>75.500000</td>\n","      <td>19.000000</td>\n","      <td>47.000000</td>\n","      <td>20.000000</td>\n","      <td>77.250000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>59.500000</td>\n","      <td>79.000000</td>\n","      <td>24.000000</td>\n","      <td>54.000000</td>\n","      <td>25.000000</td>\n","      <td>85.500000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>63.750000</td>\n","      <td>95.000000</td>\n","      <td>31.500000</td>\n","      <td>62.000000</td>\n","      <td>33.000000</td>\n","      <td>97.750000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>76.000000</td>\n","      <td>137.000000</td>\n","      <td>39.000000</td>\n","      <td>79.000000</td>\n","      <td>39.000000</td>\n","      <td>137.000000</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"8\" valign=\"top\">Spending Score (1-100)</th>\n","      <th>count</th>\n","      <td>38.000000</td>\n","      <td>39.000000</td>\n","      <td>23.000000</td>\n","      <td>45.000000</td>\n","      <td>21.000000</td>\n","      <td>34.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>49.131579</td>\n","      <td>82.128205</td>\n","      <td>77.608696</td>\n","      <td>49.066667</td>\n","      <td>19.380952</td>\n","      <td>16.764706</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>7.853975</td>\n","      <td>9.364489</td>\n","      <td>13.272457</td>\n","      <td>6.300794</td>\n","      <td>12.555780</td>\n","      <td>9.881292</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>29.000000</td>\n","      <td>63.000000</td>\n","      <td>39.000000</td>\n","      <td>35.000000</td>\n","      <td>3.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>42.000000</td>\n","      <td>74.500000</td>\n","      <td>73.000000</td>\n","      <td>45.000000</td>\n","      <td>6.000000</td>\n","      <td>10.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>50.000000</td>\n","      <td>83.000000</td>\n","      <td>77.000000</td>\n","      <td>49.000000</td>\n","      <td>15.000000</td>\n","      <td>15.500000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>55.000000</td>\n","      <td>90.000000</td>\n","      <td>84.500000</td>\n","      <td>55.000000</td>\n","      <td>31.000000</td>\n","      <td>22.750000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>61.000000</td>\n","      <td>97.000000</td>\n","      <td>99.000000</td>\n","      <td>60.000000</td>\n","      <td>40.000000</td>\n","      <td>39.000000</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"8\" valign=\"top\">Gender</th>\n","      <th>count</th>\n","      <td>38.000000</td>\n","      <td>39.000000</td>\n","      <td>23.000000</td>\n","      <td>45.000000</td>\n","      <td>21.000000</td>\n","      <td>34.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>0.657895</td>\n","      <td>0.538462</td>\n","      <td>0.565217</td>\n","      <td>0.577778</td>\n","      <td>0.619048</td>\n","      <td>0.411765</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.480783</td>\n","      <td>0.505035</td>\n","      <td>0.506870</td>\n","      <td>0.499495</td>\n","      <td>0.497613</td>\n","      <td>0.499554</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a82a4096-237d-435e-8a9e-9f5f031291cb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a82a4096-237d-435e-8a9e-9f5f031291cb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a82a4096-237d-435e-8a9e-9f5f031291cb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0759282f-9d24-45dc-b812-076152496fb4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0759282f-9d24-45dc-b812-076152496fb4')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0759282f-9d24-45dc-b812-076152496fb4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_1289572d-fe0c-42e3-95c9-0522e95da1b8\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cluster_description')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_1289572d-fe0c-42e3-95c9-0522e95da1b8 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('cluster_description');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["cluster_means"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"Sgy4JjFEBxQO","executionInfo":{"status":"ok","timestamp":1703727917524,"user_tz":-540,"elapsed":6,"user":{"displayName":"정정민","userId":"12370841041645303331"}},"outputId":"6d0939d9-3f0b-48a2-d168-6a8d16542013"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Cluster                         0          1          2          3          4  \\\n","Age                     27.000000  32.692308  25.000000  56.333333  45.523810   \n","Annual Income (k$)      56.657895  86.538462  25.260870  54.266667  26.285714   \n","Spending Score (1-100)  49.131579  82.128205  77.608696  49.066667  19.380952   \n","Gender                   0.657895   0.538462   0.565217   0.577778   0.619048   \n","\n","Cluster                         5  \n","Age                     41.264706  \n","Annual Income (k$)      88.500000  \n","Spending Score (1-100)  16.764706  \n","Gender                   0.411765  "],"text/html":["\n","  <div id=\"df-301fe50e-bb6e-40da-9563-79af5fd8cd43\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>Cluster</th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Age</th>\n","      <td>27.000000</td>\n","      <td>32.692308</td>\n","      <td>25.000000</td>\n","      <td>56.333333</td>\n","      <td>45.523810</td>\n","      <td>41.264706</td>\n","    </tr>\n","    <tr>\n","      <th>Annual Income (k$)</th>\n","      <td>56.657895</td>\n","      <td>86.538462</td>\n","      <td>25.260870</td>\n","      <td>54.266667</td>\n","      <td>26.285714</td>\n","      <td>88.500000</td>\n","    </tr>\n","    <tr>\n","      <th>Spending Score (1-100)</th>\n","      <td>49.131579</td>\n","      <td>82.128205</td>\n","      <td>77.608696</td>\n","      <td>49.066667</td>\n","      <td>19.380952</td>\n","      <td>16.764706</td>\n","    </tr>\n","    <tr>\n","      <th>Gender</th>\n","      <td>0.657895</td>\n","      <td>0.538462</td>\n","      <td>0.565217</td>\n","      <td>0.577778</td>\n","      <td>0.619048</td>\n","      <td>0.411765</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-301fe50e-bb6e-40da-9563-79af5fd8cd43')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-301fe50e-bb6e-40da-9563-79af5fd8cd43 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-301fe50e-bb6e-40da-9563-79af5fd8cd43');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-35ba6697-338d-4f6a-828d-a51748982a0d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-35ba6697-338d-4f6a-828d-a51748982a0d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-35ba6697-338d-4f6a-828d-a51748982a0d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_b7d8217e-3aa6-42c3-95bd-632b1b7fbd63\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cluster_means')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_b7d8217e-3aa6-42c3-95bd-632b1b7fbd63 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('cluster_means');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":[],"metadata":{"id":"blfwbmMaGIKP"},"execution_count":null,"outputs":[]}]}