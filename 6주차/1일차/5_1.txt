외전
배움의 패턴 중 정체기에서 어떻게 해결하느냐가 중요.
1. 배움이 정체되어도 즐겨야함
2. 아는 것 모르는 것을 분명히 이해해라 + 무엇을 모르는지 구체적으로 질문이 가능한가? >> 피드백 수용자세
3. 기죽지 말아라 .. 내가 모르면 남도 모름, 나도 시간 지나면 그렇게 됨

==================
데이터 직군의 특정
큰데이터 >>프로세싱>> 작은데이터
문제를 답하기 위해(다양한 목적을 위해) sql 사용 

관계형 데이터베이스
테이블(엑셀)이 여러개 있는 것 .. 구조화된 데이터를 저장하고 관리하여 분석을 쉽게할 수 있도록 함
+테이블 스키마 : 테이블을 구성하는 컬럼들의 이름, 구성을 아는 것

*구조
(폴더-테이블) 구조(2단계) > 해당 폴더에 있는 테이블은 어떤 종류의 데이터를 다루는지 파악가능
+'폴더'를 '스키마'/데이터베이스 로 부른다
= ETL/데이터 파이프라인 : 외부 데이터 추출해서 내가 원하는 포맷으로 변환하여 저장하는 것

*대표적 관계형 데이터베이스
프로덕션 데이터베이스	<>	***데이터 웨어하우스***
속도, 서비스 정보저장		크기, 분석 및 모델빌딩을 위한 정보저장== 프로덕션 데이터베이스 복사
백엔드, 프론트엔드		데이터 직군
MySQL, Oracle, PostgreSQL ..	Redshift, Snowflake, BigQuery, Hive ..
OLTP(transaction)		OLAP(analytical)
데이터모델링 - 스타스키마(매핑)	데이터 모델링 - Denormalized 스키마 (모든 데이터 때려박)
+ 스토리지 낭비 감소, 업데이트 용이	+ join 없어 빠름
- join이 많아짐 (리소스,시간 증가)	- 공간이 많이 필요		

>> 둘다 별개의 데이터베이스로 존재 = 서로 영향을 안끼침  
+아닐수도 있는데 데이터 다루는데 조심해야한다.

* 데이터 웨어하우스
회사에 필요한 모든 데이터를 저장 (그 중 프로덕션 데이터가 중요)


SQL
관계형 데이터베이스의 데이터를 질의/조작 하는 언어

*DDL/DML
DDL (definition) 	: 테이블 정의 .. 어떤 데이터가 저장되는지 format 지정 (create alter drop) == 스키마 조작
DML (manupulation)	: 테이블 조작 .. 조건에 맞는 레코드 검색, 추가, 삭제 (select update delete ..)

*단점
구조화된 데이터 한정으로 최적화 + 그 중에서도 nest관계도 지원을 안함 .. 데이터베이스 안에 데이터베이스 (google bigquery, json)
관계형데이터베이스마다 문법이 조금씩 다름
== 비구조화 데이터 처리를 위해 "분산컴퓨팅환경"이 필요함 (spark, hadoop)

클라우드/AWS
1. no provisioning
2. pay as you go

모델생성
1.가설세우기(문제정의) 2.훈련데이터 수집 3.사용할 알고리즘 및 파라매터 선정 4.API형태로 배포

Redshift
2PB까지 수용, 데이터웨어하우스에서 사용(속도 느림), 컬럼별 처리 > 컬럼별 압축,추가,삭제 가능
+벌크 업데이트 : 많은 양의 레코드(csv,json) 파일을 웹스토리지(S3)에 저장하고 redshift의 테이블에 일괄복사(COPY)를 지원함
+Redshift: 고정된 용량,비용 <> snowflake, BigQuery : 가변성
+Primary key 보장 X : 일일히 찾아야하므로 
+추천순 	Redshift	<  BigQuery 		< Snowflake
	고정된 자원	  구글클라우드 환경	  클라우드 상관 X	
+프로덕션 데이터베이스에서 사용하는 Postgresql 8.x 버전과 SQL호환이 가능 > 공통된 툴 사용 가능
+SQL이 메인 언어 : 구조화된 데이터만 처리 가능 >> 테이블 디자인 



